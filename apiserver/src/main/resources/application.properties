#quarkus.keycloak.realm=EDDI
#quarkus.keycloak.auth-server-url=https://auth.labs.ai/auth
#quarkus.keycloak.ssl-required=external
#quarkus.keycloak.resource=eddi-quarkus
#quarkus.keycloak.public-client=true
#quarkus.keycloak.bearer-only=true
#quarkus.keycloak.credentials.secret=8cee8d88-2932-4943-be52-4cbd438f2941
#quarkus.keycloak.policy-enforcer.enable=true
#quarkus.keycloak.policy-enforcer.enforcement-mode=PERMISSIVE
#quarkus.keycloak.realm-public-key=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjy5PLK/Q+v4HJ3AA5pnADaeqmpeD5it3jmcDf7nFCtl1++lBEvTn3DYMZ7L0N9FkbblwyEs1rgvQ3vVxn4LKs1zFvv7KUsIAYOFsbgGu2/XDZ+Unyye8vDE8t/kRUQbgscBpxtkvb5dUUf5tJkMCKUqOqTc4ZlLqRm7VuxZzZ10+gUCDstC390KuIdgFiydFzR6ye1ct89hIB5ntLTSGPK5IbcqkLzLNUdR1Td/ctpvR+SxY5aAXKSF9ZEWP7h4QmhqYqstl2Z8oKO/bqs168X/WaWbGbYgW4O1RKjWcJvs33boK9MHw03wTkWN2Q4cFHHMM4bLVCnlJ2vXru6O2FwIDAQAB
quarkus.http.host=0.0.0.0
quarkus.http.port=7070
#quarkus.http.ssl-port=7443
#quarkus.http.ssl.certificate.key-store-file=keystore/eddi_selfsigned.jks
#quarkus.http.ssl.certificate.key-store-file-type=JKS
#quarkus.http.ssl.certificate.key-store-password=OBF:1eu71lfi1vu11zt120lb1zsp1vv91lc01evz
quarkus.mongodb.connection-string=mongodb://mongodb:27017
swagger.oauth2.implicitAuthorizationUrl=https://auth.labs.ai/auth/realms/EDDI/protocol/openid-connect/auth
httpClient.maxConnectionsQueued=200
httpClient.maxConnectionPerRoute=200
httpClient.requestBufferSize=8192
httpClient.responseBufferSize=8192
httpClient.maxRedirects=32
httpClient.trustAllCertificates=true
mongodb.hosts=mongodb
mongodb.port=27017
mongodb.database=eddi
mongodb.source=eddi
mongodb.username=
mongodb.password=
mongodb.connectionsPerHost=100
mongodb.connectTimeout=10000
mongodb.heartbeatConnectTimeout=20000
mongodb.heartbeatFrequency=10000
mongodb.heartbeatSocketTimeout=20000
mongodb.localThreshold=15
mongodb.maxConnectionIdleTime=-1
mongodb.maxConnectionLifeTime=-1
mongodb.maxWaitTime=120000
mongodb.minConnectionsPerHost=-1
mongodb.minHeartbeatFrequency=500
mongodb.requiredReplicaSetName=
mongodb.serverSelectionTimeout=30000
mongodb.socketTimeout=0
mongodb.sslEnabled=false
mongodb.threadsAllowedToBlockForConnectionMultiplier=5
swagger.host=
swagger.title=E.D.D.I
swagger.version=5.0-SNAPSHOT
swagger.contact=contact@labs.ai
swagger.license=ASL 2.0
swagger.schemes=https,http
swagger.base_path=/
swagger.licenseUrl=https://www.apache.org/licenses/LICENSE-2.0
swagger.description=Documentation: http://docs.labs.ai
swagger.pretty_print=true
swagger.terms_of_service_url=
systemRuntime.projectName=eddi
systemRuntime.projectVersion=5.0-SNAPSHOT
systemRuntime.configDir=config/production
systemRuntime.resourceDir=resources
systemRuntime.logDir=logs
systemRuntime.webDir=web
security.acceptSelfSignedCertificates=true
server.httpsPort=7443
server.host=localhost
system.apiServerURI=http://localhost:7070
system.environment=production
system.pathOfPermissionStore=/permissionstore/permissions
system.skipPermissionCheck=true
system.botTimeoutInSeconds=30
alwaysReloadResourcesFile=true
mergeResourceFiles=false
addFingerprintToResources=true
bugsnagApiKey=
threads.corePoolSize=256
threads.maximumPoolSize=256
threads.keepAliveTimeInSeconds=60
threads.queueSize=-1
webServer.keyStorePath=/keystore/eddi_selfsigned.jks
webServer.keyStorePassword=OBF:1eu71lfi1vu11zt120lb1zsp1vv91lc01evz
webServer.virtualHosts=localhost
webServer.useCrossSiteScriptingHeaderParam=true
webServer.responseDelayInMillis=0
webServer.applicationConfigurationClass=ai.labs.api.ApplicationConfiguration
webServer.defaultPath=/view
webServer.idleTime=30000
webServer.outputBufferSize=32768
# webServer.securityHandlerType -> none | basic | keycloak
webServer.securityHandlerType=none
webServer.publicAccessPaths=/bots/unrestricted/*;/health;/text/*;/binary/*
webServer.basicAuth.defaultUsername=eddi
webServer.basicAuth.defaultPassword=labsai


quarkus.application.name=eddi
quarkus.application.version=5.0-SNAPSHOT
#quarkus.arc.auto-inject-fields=true
quarkus.arc.remove-unused-beans=all

#
# HTTP headers exposed in CORS
#
# Comma separated list of valid headers. ex: X-Custom,Content-Disposition
#
# default: <empty>
#
#quarkus.http.cors.exposed-headers=

#
# HTTP headers allowed for CORS
#
# Comma separated list of valid headers. ex: X-Custom,Content-Disposition
# The filter allows any header if this is not set.
#
# default: returns any requested header as valid
#
#quarkus.http.cors.headers=

#
# HTTP methods allowed for CORS
#
# Comma separated list of valid methods. ex: GET,PUT,POST
# The filter allows any method if this is not set.
#
# default: returns any requested method as valid
#
#quarkus.http.cors.methods=

#
# Origins allowed for CORS
#
# Comma separated list of valid URLs. ex: http://www.quarkus.io,http://localhost:3000
# The filter allows any origin if this is not set.
#
# default: returns any requested origin as valid
#
#quarkus.http.cors.origins=

#
# The number if IO threads used to perform IO. This will be automatically set to a reasonable value based on
# the number of CPU cores if it is not provided
#
#quarkus.http.io-threads=

#
# The file path to a server certificate or certificate chain in PEM format.
#
#quarkus.http.ssl.certificate.file=

#
# The file path to the corresponding certificate private key file in PEM format.
#
#quarkus.http.ssl.certificate.key-file=

#
# The cipher suites to use. If none is given, a reasonable default is selected.
#
#quarkus.http.ssl.cipher-suites=

#
# The list of protocols to explicitly enable.
#
#quarkus.http.ssl.protocols=TLSv1.3,TLSv1.2

#
# The SSL provider name to use. If none is given, the platform default is used.
#
#quarkus.http.ssl.provider-name=

#
# The SSL session cache size. If not given, the platform default is used.
#
#quarkus.http.ssl.session-cache-size=

#
# The SSL session cache timeout. If not given, the platform default is used.
#
#quarkus.http.ssl.session-timeout=

#
# The HTTP port used to run tests
#
#quarkus.http.test-port=8081

#
# The HTTPS port used to run tests
#
#quarkus.http.test-ssl-port=8444

#
# The maven artifactId of the artifact to index
#
#quarkus.index-dependency.{*}.artifact-id=

#
# The maven classifier of the artifact to index
#
#quarkus.index-dependency.{*}.classifier=

#
# The maven groupId of the artifact to index
#
#quarkus.index-dependency.{*}.group-id=

#
# Enable JNI support.
#
#quarkus.jni.enable=false

#
# Paths of library to load.
#
#quarkus.jni.library-paths=

#
# When using a cookie store, this option sets the path of the cookie used to store account info. If itâs a relative path,
# then it is assumed that the application is running in a context root, and is interpreted relative to that context root.
# If itâs an absolute path, then the absolute path is used to set the cookie path. Defaults to use paths relative to the
# context root
#
#quarkus.keycloak.adapter-state-cookie-path=

#
# If the Keycloak server requires HTTPS and this config option is set to true the Keycloak serverâs certificate is
# validated via the truststore, but host name validation is not done. This setting should only be used during development
# and never in production as it will disable verification of SSL certificates. This seting may be useful in test
# environments
#
#quarkus.keycloak.allow-any-hostname=false

#
# If the adapter should refresh the access token for each request
#
#quarkus.keycloak.always-refresh-token=false

#
# This should be set to true if your application serves both a web application and web services (e.g. SOAP or REST).
# It allows you to redirect unauthenticated users of the web application to the Keycloak login page, but send an HTTP 401
# status code to unauthenticated SOAP or REST clients instead as they would not understand a redirect to the login page.
# Keycloak auto-detects SOAP or REST clients based on typical headers like X-Requested-With, SOAPAction or Accept
#
#quarkus.keycloak.autodetect-bearer-only=false

#
# Password for the clientâs key
#
#quarkus.keycloak.client-key-password=

#
# This is the file path to a keystore file. This keystore contains client certificate for two-way SSL when the adapter
# makes HTTPS requests to the Keycloak server
#
#quarkus.keycloak.client-keystore=

#
# Password for the client keystore
#
#quarkus.keycloak.client-keystore-password=

#
# The confidential port used by the Keycloak server for secure connections over SSL/TLS
#
#quarkus.keycloak.confidential-port=8443

#
# Adapters will make separate HTTP invocations to the Keycloak server to turn an access code into an access token.
# This config option defines how many connections to the Keycloak server should be pooled
#
#quarkus.keycloak.connection-pool-size=20

#
# If CORS is enabled, this sets the value of the Access-Control-Allow-Headers header. This should be a comma-separated
# string
#
#quarkus.keycloak.cors-allowed-headers=

#
# If CORS is enabled, this sets the value of the Access-Control-Allow-Methods header. This should be a comma-separated
# string
#
#quarkus.keycloak.cors-allowed-methods=

#
# If CORS is enabled, this sets the value of the Access-Control-Expose-Headers header. This should be a comma-separated
# string
#
#quarkus.keycloak.cors-exposed-headers=

#
# If CORS is enabled, this sets the value of the Access-Control-Max-Age header. This is OPTIONAL. If not set,
# this header is not returned in CORS responses
#
#quarkus.keycloak.cors-max-age=-1

#
# The settings for client authentication with signed JWT
#
#quarkus.keycloak.credentials.jwt.{*}=

#
# The settings for client authentication with JWT using client secret
#
#quarkus.keycloak.credentials.secret-jwt.{*}=

#
# If the Keycloak server requires HTTPS and this config option is set to true you do not have to specify a truststore.
# This setting should only be used during development and never in production as it will disable verification
# of SSL certificates
#
#quarkus.keycloak.disable-trust-manager=false

#
# This enables CORS support. It will handle CORS preflight requests. It will also look into the access token to
# determine valid origins
#
#quarkus.keycloak.enable-cors=false

#
# If set to true will turn off processing of the access_token query parameter for bearer token processing.
# Users will not be able to authenticate if they only pass in an access_token
#
#quarkus.keycloak.ignore-oauth-query-parameter=false

#
# Amount of time, in seconds, specifying minimum interval between two requests to Keycloak to retrieve new public keys.
# It is 10 seconds by default. Adapter will always try to download new public key when it recognize token with unknown kid.
# However it wonât try it more than once per 10 seconds (by default). This is to avoid DoS when attacker sends lots of
# tokens with bad kid forcing adapter to send lots of requests to Keycloak
#
#quarkus.keycloak.min-time-between-jwks-requests=10

#

#
#quarkus.keycloak.policy-enforcer.claim-information-point.{*}.{*}=

#

#
#quarkus.keycloak.policy-enforcer.claim-information-point.{*}.{*}.{*}=

#
# Specifies how scopes should be mapped to HTTP methods. If set to true, the policy enforcer will use the HTTP method
# from
# the current request to check whether or not access should be granted
#
#quarkus.keycloak.policy-enforcer.http-method-as-scope=false

#
# Specifies how the adapter should fetch the server for resources associated with paths in your application. If true,
# the
# policy
# enforcer is going to fetch resources on-demand accordingly with the path being requested
#
#quarkus.keycloak.policy-enforcer.lazy-load-paths=true

#
# Defines a URL where a client request is redirected when an "access denied" message is obtained from the server.
# By default, the adapter responds with a 403 HTTP status code
#
#quarkus.keycloak.policy-enforcer.on-deny-redirect-to=

#
# Defines the limit of entries that should be kept in the cache
#
#quarkus.keycloak.policy-enforcer.path-cache.lifespan=30000

#
# Defines the time in milliseconds when the entry should be expired
#
#quarkus.keycloak.policy-enforcer.path-cache.max-entries=1000

#

#
#quarkus.keycloak.policy-enforcer.paths.{*}.claim-information-point.{*}.{*}=

#

#
#quarkus.keycloak.policy-enforcer.paths.{*}.claim-information-point.{*}.{*}.{*}=

#
# Specifies how policies are enforced
#
#quarkus.keycloak.policy-enforcer.paths.{*}.enforcement-mode=ENFORCING

#
# The name of the HTTP method
#
#quarkus.keycloak.policy-enforcer.paths.{*}.methods.{*}.method=

#
# An array of strings with the scopes associated with the method
#
#quarkus.keycloak.policy-enforcer.paths.{*}.methods.{*}.scopes=

#
# A string referencing the enforcement mode for the scopes associated with a method
#
#quarkus.keycloak.policy-enforcer.paths.{*}.methods.{*}.scopes-enforcement-mode=ALL

#
# The name of a resource on the server that is to be associated with a given path
#
#quarkus.keycloak.policy-enforcer.paths.{*}.name=

#
# A URI relative to the applicationâs context path that should be protected by the policy enforcer
#
#quarkus.keycloak.policy-enforcer.paths.{*}.path=

#
# Specifies that the adapter uses the UMA protocol.
#
#quarkus.keycloak.policy-enforcer.user-managed-access=false

#
# OpenID Connect ID Token attribute to populate the UserPrincipal name with. If token attribute is null. Possible values
# are sub, preferred_username, email, name, nickname, given_name, family_name
#
#quarkus.keycloak.principal-attribute=sub

#
# The proxy url to use for requests to the auth-server.
#
#quarkus.keycloak.proxy-url=

#
# Amount of time, in seconds, specifying maximum interval between two requests to Keycloak to retrieve new public keys.
# It is 86400 seconds (1 day) by default. Adapter will always try to download new public key when it recognize token
# with unknown kid . If it recognize token with known kid, it will just use the public key downloaded previously.
# However at least once per this configured interval (1 day by default) will be new public key always downloaded even if
# the kid of token is already known
#
#quarkus.keycloak.public-key-cache-ttl=86400

#
# Name of the realm.
#
#quarkus.keycloak.realm=

#
# Name of the realm.
#
#quarkus.keycloak.realm-public-key=

#
# If needed, specify the Redirect URI rewrite rule. This is an object notation where the key is the regular expression to
# which the Redirect URI is to be matched and the value is the replacement String. $ character can be used for
# backreferences in the replacement String
#
#quarkus.keycloak.redirect-rewrite-rules.{*}=

#
# If true, then adapter will send registration request to Keycloak. Itâs false by default and useful only when application
# is clustered
#
#quarkus.keycloak.register-node-at-startup=false

#
# Period for re-registration adapter to Keycloak. Useful when application is clustered
#
#quarkus.keycloak.register-node-period=-1

#
# Amount of time, in seconds, to preemptively refresh an active access token with the Keycloak server before it expires.
# This is especially useful when the access token is sent to another REST client where it could expire before being
# evaluated. This value should never exceed the realmâs access token lifespan
#
#quarkus.keycloak.token-minimum-time-to-live=0

#
# Possible values are session and cookie. Default is session, which means that adapter stores account info in HTTP Session.
# Alternative cookie means storage of info in cookie
#
#quarkus.keycloak.token-store=

#
# The value is the file path to a keystore file. If you prefix the path with classpath:, then the truststore will be
# obtained from the deploymentâs classpath instead. Used for outgoing HTTPS communications to the Keycloak server
#
#quarkus.keycloak.truststore=

#
# Password for the truststore keystore
#
#quarkus.keycloak.truststore-password=

#
# The session id is changed by default on a successful login on some platforms to plug a security attack vector.
# Change this to true if you want to turn this off
#
#quarkus.keycloak.turn-off-change-session-id-on-login=false

#
# If set to true, the adapter will look inside the token for application level role mappings for the user.
# If false, it will look at the realm level for user role mappings
#
#quarkus.keycloak.use-resource-role-mappings=false

#
# If set to true, then during authentication with the bearer token, the adapter will verify whether the token contains
# this client name (resource) as an audience. The option is especially useful for services, which primarily serve
# requests authenticated by the bearer token. This is set to false by default, however for improved security, it is
# recommended to enable this. See Audience Support for more details about audience support
#
#quarkus.keycloak.verify-token-audience=false

#
# The log level level for this category
#
#quarkus.log.category.{*}.level=inherit

#
# The minimum level that this category can be set to
#
#quarkus.log.category.{*}.min-level=inherit

#
# Indicates whether to log asynchronously
#
#quarkus.log.console.async=false

#
# Determine whether to block the publisher (rather than drop the message) when the queue is full
#
#quarkus.log.console.async.overflow=BLOCK

#
# The queue length to use before flushing writing
#
#quarkus.log.console.async.queue-length=512

#
# If the console logging should be in color
#
#quarkus.log.console.color=true

#
# Specify how much the colors should be darkened
#
#quarkus.log.console.darken=0

#
# If console logging should be enabled
#
#quarkus.log.console.enable=true

#
# The log format
#
#quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %s%e%n

#
# The console log level
#
#quarkus.log.console.level=ALL

#
# Indicates whether to log asynchronously
#
#quarkus.log.file.async=false

#
# Determine whether to block the publisher (rather than drop the message) when the queue is full
#
#quarkus.log.file.async.overflow=BLOCK

#
# The queue length to use before flushing writing
#
#quarkus.log.file.async.queue-length=512

#
# If file logging should be enabled
#
#quarkus.log.file.enable=false

#
# The log format
#
#quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %h %N[%i] %-5p [%c{3.}] (%t) %s%e%n

#
# The level of logs to be written into the file.
#
#quarkus.log.file.level=ALL

#
# The name of the file in which logs will be written.
#
#quarkus.log.file.path=quarkus.log

#
# File handler rotation file suffix.
#
# Example fileSuffix: .yyyy-MM-dd
#
#quarkus.log.file.rotation.file-suffix=

#
# The maximum number of backups to keep.
#
#quarkus.log.file.rotation.max-backup-index=1

#
# The maximum file size of the log file after which a rotation is executed.
#
#quarkus.log.file.rotation.max-file-size=

#
# Indicates whether to rotate log files on server initialization.
#
#quarkus.log.file.rotation.rotate-on-boot=true

#
# The message starts to match
#
#quarkus.log.filter.{*}.if-starts-with=inherit

#
# The default log level
#
#quarkus.log.level=

#
# The default minimum log level
#
#quarkus.log.min-level=INFO

#
# If gzip is enabled
#
#quarkus.resteasy.gzip.enabled=false

#
# Maximum deflated file bytes size
#
# If the limit is exceeded, Resteasy will return Response
# with status 413("Request Entity Too Large")
#
#quarkus.resteasy.gzip.max-input=

#
# Set this to override the default path for JAX-RS resources if there are no
# annotated application classes.
#
#quarkus.resteasy.path=/

#
# If this is true then JAX-RS will use only a single instance of a resource
# class to service all requests.
#
# If this is false then it will create a new instance of the resource per
# request.
#
# If the resource class has an explicit CDI scope annotation then the value of
# this annotation will always be used to control the lifecycle of the resource
# class.
#
# IMPLEMENTATION NOTE: 'javax.ws.rs.Path' turns into a CDI stereotype
# with singleton scope. As a result, if a user annotates a JAX-RS resource with
# a stereotype which has a different default scope the deployment fails with
# IllegalStateException.
#
#quarkus.resteasy.singleton-resources=true

#
# Enable native SSL support.
#
#quarkus.ssl.native=

#
# The core thread pool size. This number of threads will always be kept alive.
#
#quarkus.thread-pool.core-threads=1

#
# The executor growth resistance.
#
# A resistance factor applied after the core pool is full; values applied here will cause that fraction
# of submissions to create new threads when no idle thread is available. A value of '0.0f' implies that
# threads beyond the core size should be created as aggressively as threads within it; a value of '1.0f'
# implies that threads beyond the core size should never be created.
#
#quarkus.thread-pool.growth-resistance=0

#
# The amount of time a thread will stay alive with no work.
#
#quarkus.thread-pool.keep-alive-time=30

#
# The maximum number of threads. If this is not specified then
# it will be automatically sized to 8 * the number of available processors
#
#quarkus.thread-pool.max-threads=

#
# The queue size. For most applications this should be unbounded
#
#quarkus.thread-pool.queue-size=

#
# The frequency at which the status of the thread pool should be checked during shutdown. Information about
# waiting tasks and threads will be checked and possibly logged at this interval. Setting this key to an empty
# value disables the shutdown check interval.
#
#quarkus.thread-pool.shutdown-check-interval=5

#
# The amount of time to wait for thread pool shutdown before tasks should be interrupted. If this value is
# greater than or equal to the value for 'shutdown-timeout', then tasks will not be interrupted before
# the shutdown timeout occurs.
#
#quarkus.thread-pool.shutdown-interrupt=10

#
# The shutdown timeout. If all pending work has not been completed by this time
# then additional threads will be spawned to attempt to finish any pending tasks, and the shutdown process will
# continue
#
#quarkus.thread-pool.shutdown-timeout=1M
